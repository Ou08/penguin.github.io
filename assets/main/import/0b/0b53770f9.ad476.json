[1,["31vIlawANFZqnzLlSuHBfc","ecpdLyjvZBwrvm+cedCcQy","2boL3YooxCrot8vBjNZ1Be","d9d1hvQx9CFYr0A8rIGX06","41D7kWhyFGY7q4NDlzkazn","d8HzWKlY1KzYqZYkj/nTeM","32ZIHDW7dD9aPnDSyC4Pie","6aoKpq6+5BVaCIpoemqt7E","a8Anh32NZGRZegUtSgEj26","8ah6c9XRdGYo5KBMr2XlCI"],["node","_spriteFrame","_effectAsset","root","_textureSetter","apesCtn","scene","_parent","cocos","data"],[["cc.Node",["_name","_id","_components","_contentSize","_trs","_parent","_color","_prefab","_children"],1,9,5,7,1,5,4,2],["cc.Sprite",["_sizeMode","_type","node","_materials","_spriteFrame"],1,1,3,6],"cc.SpriteFrame",["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","node"],-1,1],["cc.Material",["_name","_techniqueData"],2,11],["cc.Material",["_name","_techniqueData"],1],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Canvas",["_fitWidth","_fitHeight","node","_designResolution"],1,1,5],["e1b90/rohdEk4SdmmEZANaD",["node","apesCtn","cocos"],3,1,1,6],["cc.PrefabInfo",["root"],3,1],["cc.Scene",["_name","_children","_anchorPoint","_trs"],2,2,5,7],["cc.Camera",["_clearFlags","_depth","node"],1,1],["cc.Label",["_string","_fontSize","_lineHeight","_N$horizontalAlign","_N$verticalAlign","node","_materials"],-2,1,3],["cc.Prefab",["_name"],2],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[0,0,5,2,3,4,2],[1,0,2,3,4,2],[9,0,1],[14,0,1,2,4],[4,0,1,2],[5,0,1,3],[6,0,1,3],[0,0,1,8,2,6,3,4,3],[0,0,5,2,6,3,2],[0,0,5,2,7,3,4,2],[0,0,5,2,4,2],[0,0,5,2],[0,0,2,7,3,4,2],[7,0,1,2,3,3],[8,0,1,2,1],[3,0,4,2],[3,1,0,2,3,4,5],[1,1,0,2,3,4,3],[1,2,3,4,1],[10,0,1,2,3,2],[11,0,1,2,3],[12,0,1,2,3,4,5,6,6],[13,0,2]],[[[[4,"updateColor",[{},"0",11,[{"defines":{"USE_TEXTURE":true,"USE_COLOR":true,"USE_ALPHA_TEST":false}},"props",11,[{},"beginColor",8,[4,4278245884],"endColor",8,[4,4294967295]]]]]],0,0,[0],[2],[3]],[[[6,"helloworld",null],[7,"Canvas","a286bbGknJLZpRpxROV6M94",[-5,-6,-7,-8,-9,-10],[[13,true,false,-1,[5,720,1280]],[14,-3,-2,7],[15,45,-4]],[4,4294769916],[5,720,1280],[360,640,0,0,0,0,1,1,1,1]],[8,"background",1,[[16,0,45,200,150,-11],[17,1,0,-12,[0],1]],[4,4281214491],[5,720,1280]],[9,"cocos",1,[[18,-14,[2],3]],[2,-13],[5,195,270],[0,-389.388,0,0,0,0,1,1,1,1]],[19,"New Node",[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[10,"Main Camera",1,[[20,7,-1,-15]],[0,0,535.1954115726729,0,0,0,1,1,1,1]],[0,"label",1,[[21,"Hello, World!",60,60,1,1,-16,[4]]],[5,342.33,75.6],[0,-409.834,0,0,0,0,1,1,1,1]],[0,"New Sprite",1,[[1,0,-17,[5],6]],[5,500,500],[0,-489.062,0,0,0,0,1,1,1,1]],[11,"root",1]],0,[0,0,1,0,5,8,0,0,1,0,0,1,0,-1,5,0,-2,2,0,-3,3,0,-4,6,0,-5,7,0,-6,8,0,0,2,0,0,2,0,3,3,0,0,3,0,0,5,0,0,6,0,0,7,0,6,4,1,7,4,17],[0,0,0,0,0,0,0,0],[-1,1,-1,1,-1,-1,1,8],[1,4,2,0,1,5,0,6]],[[{"name":"HelloWorld","rect":[0,0,195,270],"offset":[0,0],"originalSize":[195,270],"capInsets":[0,0,0,0]}],[2],0,[0],[4],[7]],[[[22,"cocos"],[12,"cocos",[[1,0,-2,[0],1]],[2,-1],[5,97.5,135],[0,50,0,0,0,0,1,1,1,1]]],0,[0,3,1,0,0,1,0,9,1,2],[0,0],[-1,1],[2,0]],[[{"name":"singleColor","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[2],0,[0],[4],[8]],[[[3,"彩虹",[{"hash":916771590,"record":null,"name":"彩虹|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat drawHalfCircle(vec2 center,vec2 uv,float radius) {\n  float dis = distance(uv,center);\n  dis = smoothstep(radius,radius -.005,dis);\n  return dis;\n}\nfloat drawHalfCircleLine(vec2 center,vec2 uv,float radius,float width) {\n  float c1 = drawHalfCircle(center,uv,radius);\n  float c2 = drawHalfCircle(center,uv,radius - width);\n  return c1 - c2;\n}\nvoid main () {\n  vec3 color;\n  vec2 point = vec2(.5,0.);\n  float circleline1 = drawHalfCircleLine(point,v_uv0,0.5,0.05);\n  float circleline2 = drawHalfCircleLine(point,v_uv0,0.45,0.05);\n  float circleline3 = drawHalfCircleLine(point,v_uv0,0.4,0.05);\n  vec3 colorred = vec3(1.,0.,0.);\n  vec3 colorgreen = vec3(0.,1.,0.);\n  vec3 colorblue = vec3(0.,0.,1.);\n  vec3 ret = circleline1 * colorred\n    + circleline2 * colorgreen\n    + circleline3 * colorblue;\n  color = ret;\n  vec4 o = vec4(color,1);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat drawHalfCircle(vec2 center,vec2 uv,float radius) {\n  float dis = distance(uv,center);\n  dis = smoothstep(radius,radius -.005,dis);\n  return dis;\n}\nfloat drawHalfCircleLine(vec2 center,vec2 uv,float radius,float width) {\n  float c1 = drawHalfCircle(center,uv,radius);\n  float c2 = drawHalfCircle(center,uv,radius - width);\n  return c1 - c2;\n}\nvoid main () {\n  vec3 color;\n  vec2 point = vec2(.5,0.);\n  float circleline1 = drawHalfCircleLine(point,v_uv0,0.5,0.05);\n  float circleline2 = drawHalfCircleLine(point,v_uv0,0.45,0.05);\n  float circleline3 = drawHalfCircleLine(point,v_uv0,0.4,0.05);\n  vec3 colorred = vec3(1.,0.,0.);\n  vec3 colorgreen = vec3(0.,1.,0.);\n  vec3 colorblue = vec3(0.,0.,1.);\n  vec3 ret = circleline1 * colorred\n    + circleline2 * colorgreen\n    + circleline3 * colorblue;\n  color = ret;\n  vec4 o = vec4(color,1);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"彩虹|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[5,"彩虹",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[2],[9]],[[[3,"updateColor",[{"hash":1197759253,"record":null,"name":"updateColor|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_COLOR\n  uniform color{\n    vec4 beginColor;\n    vec4 endColor;\n  };\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 uv = v_uv0;\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  #if USE_COLOR\n    o *= beginColor + (endColor-beginColor)*uv.x;\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_COLOR\n  uniform vec4 beginColor;\nuniform vec4 endColor;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 uv = v_uv0;\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  #if USE_COLOR\n    o *= beginColor + (endColor-beginColor)*uv.x;\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"USE_COLOR","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"color","binding":1,"members":[{"name":"beginColor","type":16,"count":1},{"name":"endColor","type":16,"count":1}],"defines":["USE_COLOR"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"updateColor|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"beginColor":{"type":16,"value":[255,255,255,255],"editor":{"type":"color"}},"endColor":{"type":16,"value":[255,255,255,255],"editor":{"type":"color"}}}}]}]]],0,0,[],[],[]]]]